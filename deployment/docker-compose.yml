version: '3'

services:

  web:
    build:
      context: ../.
      dockerfile: ./deployment/docker/django/Dockerfile
    image: web-server
    command: poetry run gunicorn -w 5 -b "0.0.0.0:8000" --timeout 700 --log-level debug --access-logfile - config.wsgi:application
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    restart: always
    depends_on:
      - db
    env_file:
      - ./envs/local/.django

  db:
    image: postgres:12.5-alpine
    env_file:
      - ./envs/local/.postgres
    restart: always
    volumes:
      - ./docker/postgres/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/init-database.sh
      - database_volume:/var/lib/postgresql/data

  nginx:
    image: nginx:1.21-alpine
    ports:
      - 8000:80
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/media
      - type: bind
        source: ./docker/nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      - web
    restart: always

  rabbitmq:
    restart: always
    image: rabbitmq:3.9-alpine
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file:
      ./envs/local/.rabbitmq

  celeryworker:
    build:
      context: ../.
      dockerfile: ./deployment/docker/django/Dockerfile
    image: web-server
    command: celery -A config worker -l INFO
    env_file:
      ./envs/local/.rabbitmq
    depends_on:
      - rabbitmq

  celerybeat:
    build:
      context: ../.
      dockerfile: ./deployment/docker/django/Dockerfile
    image: web-server
    command: celery -A config beat -l INFO -S django
    env_file:
      ./envs/local/.rabbitmq
    depends_on:
      - rabbitmq
      - celeryworker

  traccar:
    image: traccar/traccar:alpine
    container_name: traccar
    hostname: traccar
    restart: always
    ports:
      - 80:8082
      - 5000-5150:5000-5150
      - 5000-5150:5000-5150/udp
    volumes:
      - ./traccar/logs:/opt/traccar/logs:rw
      - ./traccar/traccar.xml:/opt/traccar/conf/traccar.xml:ro
    depends_on:
      - db

volumes:
  database_volume:
  static_volume:
  media_volume:
  rabbitmq_data:
